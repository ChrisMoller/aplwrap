2020-06-29    <moller@mollerware.com>

	* resources.c (restore_resources): Added save/restore for font
	size and fg/bg colours.

	* aplwrap.c (key_press_event): Fixed Up/Down key command history.
	(load_css_provider): New fcn to allow fg/bg settings to change the
	css provider.
	
	* menu.c (settings_cb): Added foreground/background settings.
	Added font size spinn button.

2020-06-2    <moller@mollerware.com>

	* txtbuf.c (tagged_insert): Replaced deprecated ...beep()
	
	* pstat.c (get_pstat): Replace sprintf() to too-small fixed buffer
	with asprintf().
	
	* options.[ch]: Added options to set foreground/background
	colours.  Also added an option to pass a -L workspace load to apl.

2014-10-19  David B. Lamkins  <david@lamkins.net>

	* aplio.c (apl_read_err): Add 100us sleep to reduce the likelihood
	of APLwrap failing to recognize a prompt. See explanation in the
	code comments.

2014-10-18  David B. Lamkins  <david@lamkins.net>

	* pstat.c (show_pstat): Create Pstat window under mouse pointer.

2014-10-17  David B. Lamkins  <david@lamkins.net>

	* menu.h: Support explicit creation of a new file editor, rather
	than having to go through export followed by import. Remove export
	commands.

	* edit.h: Support explicit creation of a new file editor, rather
	than having to go through export followed by import. Remove export
	commands.

	* menu.c (set_filename, new_file, build_menubar): Support explicit
	creation of a new file editor, rather than having to go through
	export followed by import. Remove export commands.

	* edit.c (edit_save_file, edit_delete_real, build_edit_menubar)
	(edit_object, edit_file): Support explicit creation of a new file
	editor, rather than having to go through export followed by
	import. Remove export commands.

2014-10-16  David B. Lamkins  <david@lamkins.net>

	* options.h: Add --shortcuts command-line option.

	* menu.h: Add --shortcuts command-line option.

	* options.c: Add --shortcuts command-line option.

	* menu.c (init_shortcuts): Add --shortcuts command-line option.

	* aplwrap.c (main): Add --shortcuts command-line option.

	* complete.c: Improve completion function's wraparound logic. Fix
	completion function's origin-dependence.

	* complete.c: Completion function handles empty completion list.

2014-10-15  David B. Lamkins  <david@lamkins.net>

	* pstat.h (): Pstat window is now accessed via Help menu and
	retains appearance when not in front.

	* menu.c (settings_cb): Pstat window is now accessed via Help menu
	and retains appearance when not in front.

	* help.c (help_menu): Pstat window is now accessed via Help menu
	and retains appearance when not in front.

	* pstat.c (pstat_destroy, show_pstat): Pstat window is now
	accessed via Help menu and retains appearance when not in front.

2014-10-14  David B. Lamkins  <david@lamkins.net>

	* aplwrap.c (delete_uncommitted_input, key_press_event): Bind
	Alt-Delete to delete uncommitted input.

2014-10-13  David B. Lamkins  <david@lamkins.net>

	* help.c (show_manuals): Manuals window is the same size as other
	APLwrap windows.

	* edit.h (): Offer to save dirty file edit buffers while quitting.

	* apl.h (): Offer to save dirty file edit buffers while quitting.

	* edit.c (edit_delete_real, check_modified_and_save)
	(save_dirty_edit_buffers): Offer to save dirty file edit buffers
	while quitting.

	* apl.c (is_quitting, aplwrap_quit): Offer to save dirty file edit
	buffers while quitting.

2014-10-12  David B. Lamkins  <david@lamkins.net>

	* edit.c (update_status, set_status_line, edit_close): Fix crash
	when closing edit window.

	* edit.h (): When saving a buffer under a different name, existing
	buffers with that name adopt the new content.

	* edit.c (set_status_line, update_name_and_status)
	(edit_save_object_cb, edit_save_file_as, edit_object, edit_file):
	When saving a buffer under a different name, existing buffers with
	that name adopt the new content.

	* apl.c (aplwrap_quit): For now, disable the dirty-buffer check on
	exit.

	* edit.c (update_name, edit_object, edit_file): Update edit
	windows with new content upon renaming another edit window to a
	matching name or path.

	* menu.c (names_cb): Fix failed assertion upon closing empty Open
	Object window.

	* edit.h (): Synchronize cloned	editor windows.

	* edit.c (update_status, update_name, edit_mark_set_event)
	(edit_close, edit_save_object_cb, edit_save_file)
	(edit_save_file_as, edit_revert_function_cb)
	(edit_revert_variable_cb, edit_revert, build_edit_menubar)
	(edit_key_press_event, edit_object, edit_file): Synchronize cloned
	editor windows. Assign Ctrl-L keyboard accelerator to Clone. Fix
	some memory leaks.

	* edit.c (edit_save_object_cb): Back out window title sync.
	Cloning needs rework.

2014-10-11  David B. Lamkins  <david@lamkins.net>

	* edit.c (edit_save_object_cb): Update editor window title upon
	saving function.

	* apl.c (aplwrap_quit): Implement Revert for edit window.

	* edit.h (): Implement Revert for edit window.

	* edit.c (message_dialog, edit_save_object_cb)
	(build_edit_menubar, edit_file, clear_buffer, edit_revert)
	(edit_revert_function_cb, edit_revert_variable_cb): Implement
	Revert for edit window.

2014-10-10  David B. Lamkins  <david@lamkins.net>

	* aplwrap.c, edit.c, edit.h, search.c, search.h: Enable search
	only for versions of GTK+ (3.10 or later) which support
	GtkSearchBar.

	* search.h (): Implement search in edit windows.

	* edit.h (): Implement search in edit windows.

	* search.c (new_search_context, do_search)
	(search_key_press_event, search_changed_event): Implement search
	in edit windows.

	* edit.c (edit_key_press_event, edit_object, edit_file): Implement
	search in edit windows.

	* aplwrap.c (key_press_event, main): Implement search in edit
	windows.

	* aplwrap.c (do_search, search_key_press_event, search_changed)
	(key_press_event, main): Implement search in transcript.

2014-10-09  David B. Lamkins  <david@lamkins.net>

	* aplwrap.c (home_to_end_of_apl_prompt, advance_by_apl_prompt)
	(key_press_event): Allow home_to_end_of_apl_prompt() to extend
	selection. Clarify KEY_BINDINGS.md.

	* apl.c (make_env): Add APLWRAP_BUILD environment variable.

	* help.c (show_about): Put build info on its own line in the About
	dialog.

	* help.c (show_about): Tweak About dialog: Pull title from
	aplwrap.h; fix Chris' email link; add build version information.

	* aplwrap.c (main): Pull default title from aplwrap.h.

	* menu.c (open_object_cb): Disable typeahead search in Open Object
	dialog. Document search keys.

	* menu.c (names_search, open_object_cb): Implement substring
	search in Open Object dialog.

2014-10-08  David B. Lamkins  <david@lamkins.net>

	* help.h (): Factor out help menu.

	* help.c (): Factor out help menu.

	* menu.c (build_menubar): Factor out help menu.

	* edit.c (build_edit_menubar): Add Ctrl-W accelerator key to
	close edit window. Add help menu to edit window.

	* menu.c (open_object_cb): Handle deactivated selection in Open
	Object dialog.

	* menu.c (open_object_cb): Previous patch was wrong. This one
	captures current selection in Open Object dialog.

	* menu.c (open_object_cb): Preselect first item in Open Object
	dialog so OK button will work.

	* edit.c (trim_length): Fix console warnings emitted if a function
	opened for editing contains empty lines.

2014-10-07  David B. Lamkins  <david@lamkins.net>

	* edit.h (): Don't lose unsaved edit windows when closing transcript.

	* aplwrap.h (): Don't lose unsaved edit windows when closing
	transcript.

	* edit.c (check_modified, message_dialog): Don't lose unsaved edit
	windows when closing transcript.

	* aplwrap.c (main): Don't lose unsaved edit windows when closing
	transcript.

	* apl.c (aplwrap_quit): Don't lose unsaved edit windows when
	closing transcript.

	* complete.c (is_extra_break_char, lookup_callback, complete):
	Allow additional break characters interior to completion
	identifiers.

	* edit.h (): Fix crash that may occur while closing an edit window.

	* edit.c (edit_close, set_status_line): Fix crash that may occur
	while closing an edit window.

	* edit.c (message_dialog): Fix compiler warning.

2014-10-06  David B. Lamkins  <david@lamkins.net>

	* edit.c (edit_save_object_cb): Reformat the line number report on
	function definition errors.

2014-10-05  David B. Lamkins  <david@lamkins.net>

	* edit.c (message_dialog, edit_save_object_cb, edit_file): Report
	file import error.

	* aplwrap.c (key_press_event): Don't need to explicitly handle
	accelerator keys.

	* menu.c (ps_dialog_cb, set_pstat_value, ps_button_cb)
	(ps_toggle_cb): Consolidate most pstat code into one file.

	* pstat.h (): Consolidate most pstat code into one file.

	* pstat.c (ps_dialog_cb, set_pstat_value, ps_button_cb)
	(ps_toggle_cb): Consolidate most pstat code into one file.

	* edit.c (edit_close, edit_file): Minor code cleanup.

	* menu.h (): Factor menu-item creation code.

	* menu.c (add_menu_item, build_menubar): Factor menu-item creation
	code.

	* edit.c (build_edit_menubar): Factor menu-item creation code.

2014-10-04  David B. Lamkins  <david@lamkins.net>

	* menu.c (show_manuals): Inset notebook view. Start with slightly
	larger notebook window.

	* menu.c (show_manuals): Allow notebook tabs to be reordered.

	* menu.c (show_manuals, build_menubar): Add tabbed notebook to
	display APLwrap manuals.

	* aplwrap.c (key_press_event): Add keyboard accelerators for
	commonly used menu items.

	* menu.c (build_menubar): Add keyboard accelerators for commonly
	used menu items.

	* edit.c (build_edit_menubar): Add keyboard accelerators for
	commonly used menu items.

	* menu.c (remember_shortcut, add_shortcut, import_file): Remember
	recently used folders as sidebar shortcuts in Open File dialog.

	* edit.h (): Keep function editor window open upon syntax error.

	* edit.c (edit_close, edit_save_object, edit_delete_real): Keep
	function editor window open upon syntax error.

	* menu.c (import_file): Add filters to the Open File dialog.

2014-10-03  David B. Lamkins  <david@lamkins.net>

	* menu.h (): Implemented file Open, Save and Save As.

	* edit.h (): Implemented file Open, Save and Save As.

	* menu.c (import_file, set_filename, save_log, save_log_as)
	(build_menubar): Implemented file Open, Save and Save As.

	* edit.c (set_status_line, edit_save_object_cb)
	(edit_save_object, clone_file, edit_save_file, edit_save_file_as)
	(edit_delete_real, edit_delete_event, build_edit_menubar)
	(edit_object, edit_file): Implemented file Open, Save and Save As.

2014-10-03  David B. Lamkins  <david@lamkins.net>

	* menu.c (open_object_cb): Fit edit object selector to width of
	longest name.

2014-10-03  David B. Lamkins  <david@lamkins.net>

	* menu.c (settings_cb, build_menubar): Add mnemonics to menus and
	menu items.

	* edit.c (trim_length, edit_function_cb): Strip trailing blanks
	from function lines.
	(build_edit_menubar): Add mnemonics to menus and menu items.

2014-10-03  David B. Lamkins  <david@lamkins.net>

	* edit.c (set_status_line): Correct line count in status line.

2014-10-03  David B. Lamkins  <david@lamkins.net>

	* edit.h (struct buffer_s): Removed modified member; we now rely
	upon the GtkTextBuffer's modification query.

	* edit.c (set_status_line, edit_mark_set_event, edit_save_cb)
	(edit_delete_real, edit_key_press_event, edit_function_cb, )
	(edit_object): Line and column numbers are now displayed in origin
	0. Line and column numbers update in sync with cursor movement,
	whether via keyboard or mouse. Edit window opens with cursor at
	<0,0>.

2014-10-01  David Lamkins <david@lamkins.net>

	No file details for 12 patches covering the following fixes:

	1. [lamkins_prompt_cursor_home.patch] Generalize the
	home-to-end-of-prompt behavior for all APL prompts; not just the
	six-space prompt.

	2. [lamkins_output_perror.patch] Correct a bug in error checking
	for the four output routines and add a perror() call to each to
	report unexpected errors.

	3. [lamkins_row_count_tweak.patch] Reduce the view height by its
	borders when calculating the number of full rows in the view.

	4. [lamkins_static_quitting.patch] Scope issue: quitting should
	have been static in apl.c.

	5. [lamkins_io_rework.patch] Fixed handling of EAGAIN in the
	various read() routines. Factored out the common read loops into a
	new reader() routine.

	6. [lamkins_empty_prompt.patch] Fixed an issue that caused an
	empty quote-quad prompt to make APLwrap's input handling
	misbehave.

	7. [lamkins_empty_prompt_2.patch] Restore the second call, removed
	by the previous patch, to mark_input().

	8. [lamkins_completion_reset.patch] Reset the completion marks at
	each prompt. This prevents the jump-to-end-of-completion key (ESC)
	from jumping to the end of a previous completion if no completion
	has been initiated at the current input.

	9. [lamkins_move_by_prompt.patch] Bind Alt-PageUp and Alt-PageDown
	to move backward and forward by APL prompt through the transcript.

	10. [lamkins_completion_reset_2.patch] Check that completion marks
	exist before attempting to move them.

	11. [lamkins_move_by_prompt_2.patch] Don't let move-by-prompt get
	blocked by zero-length lines.

	12. [lamkins_status_draw.patch] Correct an issue in which the
	transcript could be drawn improperly when the status line is
	displayed.

2014-09-14  Chris Moller  <moller@mollerware.com>

	* aplio.c (update_pstat_strings): Force initial values into pstat
	info dialogue.

	* menu.c (ps_button_cb): Prevent multiple pstat info dialogues.

2014-09-13  Chris Moller  <moller@mollerware.com>

	* menu.c (ps_button_cb): Added a pstat popup.

2014-09-12  Chris Moller  <moller@mollerware.com>

	* resources.c (restore_resources): Save and restore resources.

	* menu.c (ps_toggle_cb): Added a toggle for the pstat line.

	* aplio.c (apl_read_sockid): forced a null-term in call-back.

2014-09-11  Chris Moller  <moller@mollerware.com>

	* options.c (]): Added a --version flag.

	* aplio.c (apl_read_plot_pipe): Added embedded plot capability.

	* apl.c (apl_spawn): Added -f option to pass a script to APL.

2014-09-09  Chris Moller  <moller@mollerware.com>

	* apl.c (apl_spawn): Fixed emacs_arg.

2014-09-08  Chris Moller  <moller@mollerware.com>

	* edit.c (set_status_line): Added a status line showing
	modification and position.

	* txtbuf.c (tagged_insert): Added filter for invalid UTF8 chars.
	(tagged_insert): Added filter for unprintable chars.  Also catch
	the ASCII BEL character and call gdk_beep().  For reasons I don't
	know, it doesn't actually beep.
	(tagged_insert): Little bug fix.

	* aplio.c (apl_read_out): Removed some commented-out diagnostic code.

2014-09-07  Chris Moller  <moller@mollerware.com>

	* edit.c (build_edit_menubar): Renamed "Save File" to "Export File".

	* aplio.c (send_apl): Added convenience wrapper to send().  (Also
	affected fcns in edit.c and menu.c.)

2014-08-31  Chris Moller  <moller@mollerware.com>

	* menu.c (open_object_cb): Put open list inside a scrolled
	window.  Also sorted the list.

2014-08-30  Chris Moller  <moller@mollerware.com>

	* apl.c (make_env): Fixed a g_malloc mug.
	* edit.c (clone_object): Added clone.
	(build_edit_menubar): Added save to file.
	* edit.c (edit_object): Cleaned up a lot of stuff in shared buffer
	stuff. 

2014-08-29  Chris Moller  <moller@mollerware.com>

	* edit.c: Added multi-window stuff.

	* menu.c (open_object_cb): Temporarily remove variable edit.

2014-08-28  Chris Moller  <moller@mollerware.com>

	* menu.c (file_button_press_cb): Add double-click select/accept.
	* aplwrap.c (main): Add main window title.
	* edit.c (edit_save_cb): New capability: nascent editor
	* edit.c (edit_object): Add edit window title.
	(edit_variable_cb): Add edit-variable framework.

2014-08-25  Chris Moller  <moller@mollerware.com>

	* menu.c (save_log_fer_real): Add "Save Log" capability.

	* apl.c (apl_spawn): Made apl_argv dynamic.

2014-08-17  Chris Moller  <moller@mollerware.com>

	* aplwrap.c (key_press_event): Make ctrl-Windows equivalent to
	ctrl-Break in interrupting APL.

2014-08-16  Chris Moller  <moller@mollerware.com>

	* aplwrap.c (main): Fixed option parsing.
	(key_press_event): Make the keypad Enter key synonymous with the
	main Ennter key.
	(apl_read_out and apl_read_out): Fixes to the read loops.
	(key_press_event): Fixes for spurious newlines.
	(main): More input fixes by David Lamkins.

2014-08-15  Chris Moller  <moller@mollerware.com>

	* aplwrap.c: Might as well start keeping track of the changes,
	just like a real project does...

